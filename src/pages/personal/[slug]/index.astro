---
import Layout from '../../../layouts/Layout.astro';
import { getCollection } from "astro:content";

export async function getStaticPaths() {
    const cases = await getCollection('cases');

    return (await getCollection('personal')).map((personal) => {
        return {
            params: { slug: personal.id},
            props: { entry: personal, cases: cases.filter((c) => c.data.priority_detective === personal.id) },
        };
    });
}

const { entry, cases } = Astro.props;
const groups = await getCollection('groups');
const memberGroups = groups.filter(group => group.data.members && group.data.members.includes(entry.data.matriculation_number));
---

<Layout>
    <main class="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900/20 to-slate-900">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Personnel Header -->
            <div class="mb-8">
                <div class="flex items-center justify-between mb-4">
                    <h1 class="text-4xl font-bold bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent">
                        Personnel #{entry.data.matriculation_number}
                    </h1>
                    <span class={`px-4 py-2 rounded-full text-sm font-medium ${
                        entry.data.status === 'active' 
                            ? 'bg-green-400/20 text-green-300 border border-green-400/30' 
                            : 'bg-red-400/20 text-red-300 border border-red-400/30'
                    }`}>
                        {entry.data.status.toUpperCase()}
                    </span>
                </div>
                <h2 class="text-2xl font-semibold text-blue-100 mb-6">{entry.data.name}</h2>
            </div>

            <!-- Main Content Grid -->
            <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
                <!-- Cases Section -->
                <div class="lg:col-span-3">
                    <div class="bg-slate-800/30 border border-cyan-400/20 rounded-xl p-6">
                        <div class="flex items-center justify-between mb-6">
                            <h3 class="text-xl font-bold text-cyan-400 flex items-center">
                                <span class="mr-2">📋</span>
                                Assigned Cases
                            </h3>
                            <span class="text-cyan-300/70 text-sm">{cases.length} cases</span>
                        </div>
                        
                        {cases.length > 0 ? (
                            <div class="space-y-3">
                                {cases.map((policeCase) => (
                                    <div class="flex items-center justify-between p-4 bg-slate-700/30 rounded-lg hover:bg-slate-700/50 transition-all duration-200 group">
                                        <div class="flex items-center space-x-4">
                                            <a href={`/cases/${policeCase.data.case_number}`} 
                                               class="text-cyan-400 hover:text-cyan-300 font-mono font-medium group-hover:underline transition-all duration-200">
                                                #{policeCase.data.case_number}
                                            </a>
                                            <span class="text-cyan-100 font-medium">{policeCase.data.name}</span>
                                        </div>
                                        <div class="flex items-center space-x-4">
                                            <span class="text-cyan-200/80 text-sm">{policeCase.data.opened_on}</span>
                                            <span class={`px-3 py-1 rounded-full text-xs font-medium ${
                                                policeCase.data.status === 'active' 
                                                    ? 'bg-green-400/20 text-green-300 border border-green-400/30' 
                                                    : 'bg-red-400/20 text-red-300 border border-red-400/30'
                                            }`}>
                                                {policeCase.data.status}
                                            </span>
                                            <a href={`/cases/${policeCase.data.case_number}`} class="text-cyan-400 hover:text-cyan-300">
                                                →
                                            </a>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        ) : (
                            <div class="text-center py-8">
                                <div class="w-16 h-16 bg-slate-700/50 rounded-full flex items-center justify-center mx-auto mb-4">
                                    <span class="text-2xl">📋</span>
                                </div>
                                <p class="text-cyan-300/70">No cases assigned to this personnel.</p>
                            </div>
                        )}
                    </div>
                </div>

                <!-- Personnel Info Sidebar -->
                <div class="space-y-6">
                    <!-- Profile Card -->
                    <div class="bg-slate-800/30 border border-blue-400/20 rounded-xl p-6">
                        <div class="text-center mb-6">
                            <div class="w-20 h-20 bg-gradient-to-br from-blue-400 to-cyan-400 rounded-full flex items-center justify-center mx-auto mb-4">
                                <span class="text-slate-900 font-bold text-xl">{entry.data.name.split(' ').map(n => n[0]).join('')}</span>
                            </div>
                            <h3 class="text-lg font-bold text-blue-300">{entry.data.name}</h3>
                            <p class="text-blue-400/70 text-sm">{entry.data.title.charAt(0).toUpperCase() + entry.data.title.slice(1)} {entry.data.rank}</p>
                            {entry.data.pseudonyms && entry.data.pseudonyms.length > 0 && (
                                <div class="mt-4 text-left">
                                    <div class="text-xs font-semibold text-cyan-300 uppercase mb-1">Pseudonyms</div>
                                    <ul class="list-disc list-inside text-cyan-200 text-sm">
                                        {entry.data.pseudonyms.map((pseudonym) => (
                                            <li>{pseudonym}</li>
                                        ))}
                                    </ul>
                                </div>
                            )}
                            {memberGroups.length > 0 && (
                                <div class="mt-4 text-left">
                                    <div class="text-xs font-semibold text-cyan-300 uppercase mb-1">Groups</div>
                                    <ul class="list-disc list-inside text-cyan-200 text-sm">
                                        {memberGroups.map(group => (
                                            <li>{(group as any).data.name}</li>
                                        ))}
                                    </ul>
                                </div>
                            )}
                        </div>
                        
                        <div class="space-y-3">
                            <div class="flex items-center justify-between p-3 bg-slate-700/30 rounded-lg">
                                <span class="text-blue-300/70 text-sm">ID Number</span>
                                <span class="text-blue-400 font-mono font-bold">#{entry.data.matriculation_number}</span>
                            </div>
                                                        
                            <div class="flex items-center justify-between p-3 bg-slate-700/30 rounded-lg">
                                <span class="text-blue-300/70 text-sm">Joined</span>
                                <span class="text-blue-100">{entry.data.joined_on}</span>
                            </div>
                            
                            <div class="flex items-center justify-between p-3 bg-slate-700/30 rounded-lg">
                                <span class="text-blue-300/70 text-sm">Status</span>
                                <span class={`px-2 py-1 rounded-full text-xs font-medium ${
                                    entry.data.status === 'active' 
                                        ? 'bg-green-400/20 text-green-300' 
                                        : 'bg-red-400/20 text-red-300'
                                }`}>
                                    {entry.data.status}
                                </span>
                            </div>
                        </div>
                    </div>

                    <!-- Quick Stats -->
                    <div class="bg-slate-800/30 border border-cyan-400/20 rounded-xl p-6">
                        <h3 class="text-lg font-bold text-cyan-400 mb-4">Case Statistics</h3>
                        <div class="space-y-3">
                            <div class="flex items-center justify-between">
                                <span class="text-cyan-300/70 text-sm">Total Cases</span>
                                <span class="text-cyan-400 font-bold">{cases.length}</span>
                            </div>
                            <div class="flex items-center justify-between">
                                <span class="text-cyan-300/70 text-sm">Active Cases</span>
                                <span class="text-green-400 font-bold">{cases.filter(c => c.data.status === 'active').length}</span>
                            </div>
                            <div class="flex items-center justify-between">
                                <span class="text-cyan-300/70 text-sm">Closed Cases</span>
                                <span class="text-red-400 font-bold">{cases.filter(c => c.data.status === 'closed').length}</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Navigation -->
            <div class="mt-8 flex justify-between items-center">
                <a href="/cases" class="flex items-center space-x-2 px-4 py-2 bg-slate-700 hover:bg-slate-600 border border-cyan-400/30 hover:border-cyan-400/60 rounded-lg font-medium transition-all duration-200">
                    <span>←</span>
                    <span>Back to Cases</span>
                </a>
                <div class="flex items-center space-x-4 text-sm text-cyan-300/70">
                    <span>Last Updated: {new Date().toLocaleDateString()}</span>
                </div>
            </div>
        </div>
    </main>
</Layout>
