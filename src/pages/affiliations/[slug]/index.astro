---
import Layout from '../../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import CivilianCard from '../../../components/CivilianCard.astro';

export async function getStaticPaths() {
    const affiliations = await getCollection('affiliations');
    return affiliations.map((affiliation) => ({
        params: { slug: affiliation.id },
        props: { affiliation }
    }));
}

const { affiliation } = Astro.props;
const civilians = await getCollection('civilians');

// Find all civilians that are members of this affiliation
const members = civilians.filter((civilian: any) => 
    affiliation.data.members.includes(civilian.data.name)
);

// Find all civilians that are linked to this affiliation
const linkedIndividuals = civilians.filter((civilian: any) => 
    affiliation.data.linked_individuals.includes(civilian.data.name)
);
---

<Layout title={`${affiliation.data.name} - Affiliation`}>
    <main class="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900/20 to-slate-900">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <a href="/affiliations" class="inline-flex items-center text-cyan-400 hover:text-cyan-300 mb-6 transition-colors group">
                    <svg class="w-4 h-4 mr-2 group-hover:-translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                    </svg>
                    Back to Affiliations
                </a>
                
                <div class="bg-slate-800/30 border border-cyan-400/20 rounded-xl p-6 mb-6">
                    <div class="flex items-start justify-between mb-4">
                        <div>
                            <h1 class="text-4xl font-bold bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text text-transparent mb-2">
                                {affiliation.data.name}
                            </h1>
                            <p class="text-lg text-cyan-200/80 leading-relaxed mb-4">
                                {affiliation.data.description}
                            </p>
                            
                            <div class="flex flex-wrap gap-2">
                                {affiliation.data.kinds.map((kind) => (
                                    <span class="px-3 py-1 bg-cyan-400/10 border border-cyan-400/30 rounded-md text-sm text-cyan-300">
                                        {kind}
                                    </span>
                                ))}
                            </div>
                        </div>
                        <div class="w-16 h-16 bg-gradient-to-br from-cyan-400/20 to-blue-400/20 rounded-xl flex items-center justify-center border border-cyan-400/30">
                            <span class="text-cyan-400 text-2xl">üè¢</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Members Section -->
            <div class="bg-slate-800/30 border border-cyan-400/20 rounded-xl p-6 mb-6">
                <div class="flex items-center justify-between mb-6">
                    <h2 class="text-2xl font-semibold text-cyan-100">
                        Members ({members.length})
                    </h2>
                    <div class="px-3 py-1 bg-cyan-400/20 border border-cyan-400/30 rounded-full">
                        <span class="text-cyan-400 text-sm font-medium">{members.length} total</span>
                    </div>
                </div>
                
                {members.length > 0 ? (
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                        {members.map((member: any) => (
                            <CivilianCard civilian={member} />
                        ))}
                    </div>
                ) : (
                    <div class="text-center py-12">
                        <div class="w-16 h-16 bg-slate-700/50 rounded-full flex items-center justify-center mx-auto mb-4">
                            <span class="text-slate-400 text-2xl">üë•</span>
                        </div>
                        <p class="text-slate-400 italic">No members found for this affiliation.</p>
                    </div>
                )}
            </div>

            <!-- Linked Individuals Section -->
            {linkedIndividuals.length > 0 && (
                <div class="bg-slate-800/30 border border-purple-400/20 rounded-xl p-6 mb-6">
                    <div class="flex items-center justify-between mb-6">
                        <h2 class="text-2xl font-semibold text-purple-100">
                            Linked Individuals ({linkedIndividuals.length})
                        </h2>
                        <div class="px-3 py-1 bg-purple-400/20 border border-purple-400/30 rounded-full">
                            <span class="text-purple-400 text-sm font-medium">{linkedIndividuals.length} total</span>
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                        {linkedIndividuals.map((individual: any) => (
                            <CivilianCard civilian={individual} />
                        ))}
                    </div>
                </div>
            )}

            <!-- Quick Stats -->
            <div class="mt-8 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                <div class="bg-slate-800/50 border border-cyan-400/30 rounded-lg p-4">
                    <div class="flex items-center justify-between">
                        <span class="text-cyan-300/70 text-sm">Total Members</span>
                        <span class="text-2xl font-bold text-cyan-400">{members.length}</span>
                    </div>
                </div>
                <div class="bg-slate-800/50 border border-purple-400/30 rounded-lg p-4">
                    <div class="flex items-center justify-between">
                        <span class="text-purple-300/70 text-sm">Linked Individuals</span>
                        <span class="text-2xl font-bold text-purple-400">{linkedIndividuals.length}</span>
                    </div>
                </div>
                <div class="bg-slate-800/50 border border-green-400/30 rounded-lg p-4">
                    <div class="flex items-center justify-between">
                        <span class="text-green-300/70 text-sm">Active Members</span>
                        <span class="text-2xl font-bold text-green-400">
                            {members.filter((m: any) => m.data.status === 'alive').length}
                        </span>
                    </div>
                </div>
                <div class="bg-slate-800/50 border border-red-400/30 rounded-lg p-4">
                    <div class="flex items-center justify-between">
                        <span class="text-red-300/70 text-sm">Deceased Members</span>
                        <span class="text-2xl font-bold text-red-400">
                            {members.filter((m: any) => m.data.status === 'deceased').length}
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </main>
</Layout> 